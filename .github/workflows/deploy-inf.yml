name: Deploy IaC - Live

on: [push,workflow_dispatch]

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}  

permissions:
  id-token: write  
  contents: read

jobs:
  Plan:
    if: ${{ ! startsWith(vars.deployment_freeze , 'true') }}
    name: "IaC Plan"
    runs-on: ubuntu-latest
    environment: live
    env:
      rg: ${{ secrets.resource_group_name }}
      str: ${{ secrets.storage_account_name }}
      cn: ${{ secrets.container_name }}
      key: ${{ secrets.key }}
    steps:
      - name: Checkout IaC
        uses: actions/checkout@v3
        with:
          path: main
      - name: Checkout TF-Modules
        uses: actions/checkout@v3
        with:
          path: tf-modules
          repository: "cbx0n/tf-modules"
      - name: 'Terraform: Init'
        run: terraform init -backend-config "resource_group_name=$rg" -backend-config "storage_account_name=$str" -backend-config "container_name=$cn" -backend-config "key=$key"
        working-directory: ./main
      - name: 'Terraform: Plan'
        run: terraform plan -out tfplan
        working-directory: ./main
        env:
          TF_VAR_ssh_public_key: ${{ secrets.ssh_public_key }}
      - name: 'Upload TFPlan'
        uses: actions/upload-artifact@v1
        with:
          path: ./main/tfplan
          name: tfplan
  Apply:
    name: "IaC Apply"
    needs: Plan
    runs-on: ubuntu-latest
    environment: live
    env:
      rg: ${{ secrets.resource_group_name }}
      str: ${{ secrets.storage_account_name }}
      cn: ${{ secrets.container_name }}
      key: ${{ secrets.key }}
    steps:
      - name: Checkout IaC
        uses: actions/checkout@v3
        with:
          path: main
      - name: Checkout TF-Modules
        uses: actions/checkout@v3
        with:
          path: tf-modules
          repository: "cbx0n/tf-modules"
      - name: 'Terraform: Init'
        run: terraform init -backend-config "resource_group_name=$rg" -backend-config "storage_account_name=$str" -backend-config "container_name=$cn" -backend-config "key=$key"
        working-directory: ./main
      - name: 'Download TFPlan'
        uses: actions/download-artifact@v1
        with:
          path: ./main
          name: tfplan
      - name: 'Terraform: Apply'
        run: terraform apply --auto-approve tfplan
        working-directory: ./main